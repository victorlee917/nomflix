{"version":3,"sources":["Components/Header.js","Components/Section.js","Components/Loader.js","Components/message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","_templateObject","List","ul","_templateObject2","Item","li","_templateObject3","props","current","SLink","Link","_templateObject4","withRouter","_ref","pathname","location","react_default","a","createElement","to","Container","div","Section_templateObject","Title","span","Section_templateObject2","Grid","Section_templateObject3","Section","title","children","Loader_templateObject","Loader","Loader_Container","role","aria-label","message_templateObject","Text","message_templateObject2","color","Message","text","message_Container","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","ImageContainer","Poster_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","react_router_dom","concat","Poster_Container","Poster_Title","length","substring","HomePresenter_templateObject","HomePresenter","nowPlaying","popular","upcoming","loading","error","Fragment","Helmet_default","Components_Loader","HomePresenter_Container","Components_Section","map","movie","Components_Poster","key","original_title","poster_path","vote_average","release_date","message","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","umcoming","poplular","data","results","this","setState","_this$state","Home_HomePresenter","React","Component","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","show","original_name","first_air_date","TVContainer","TV_TVPresenter","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","_this","searchByTerm","target","console","log","_callee","_ref2","_ref3","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","Search_SearchPresenter","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","h3","DetailPresenter_templateObject6","ItemContainer","_templateObject7","_templateObject8","Divider","_templateObject9","Overview","p","_templateObject10","DetailPresenter","result","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","DetailPresenter_Item","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","includes","match","push","history","parseId","parseInt","isNaN","Detail_DetailPresenter","Router","Components_Header","react_router","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.7b5149c2.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  z-index: 1000;\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\nconst List = styled.ul`\n  display: flex;\n`;\nconst Item = styled.li`\n  width: 50px;\n  text-align: center;\n  border-bottom: 5px solid\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    {/* {console.log(pathname)} */}\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\nconst Title = styled.span`\n  font-size: 15px;\n  font-weight: 600;\n`;\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\n// const Section = ({ title, children }) => (\n//   <Container>\n//     <Title>{title}</Title>\n//     <Grid>{children}</Grid>\n//   </Container>\n// );\n\n//위에 꺼랑 아래 꺼랑 같다\n\nconst Section = props => (\n  <Container>\n    <Title>{props.title}</Title>\n    <Grid>{props.children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 32px;\n  margin-top: 20px;\n`;\n\nconst Loader = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n\nexport default Loader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.2s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.2s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  font-size: 12px;\n  margin-bottom: 2px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : \"none\"\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 15 ? `${title.substring(0, 15)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {/* {upcoming && upcoming.length > 0 && (\n        <Section\n          title=\"Upcoming Movies\"\n          children={upcoming.map(movie => movie.title)}\n        />\n      )} */}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} />}\n      </Container>\n    )}\n  </>\n);\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"e50a93dd9f711dd1eff942bc0d6b467e\",\n    language: \"en-US\"\n  }\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\n\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    umcoming: null,\n    poplular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movies information.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today Shows\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} />}\n      </Container>\n    )}\n    ;\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null\n  };\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Cant find TV information\"\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"../../Components/message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  error,\n  searchTerm,\n  handleSubmit,\n  updateTerm\n}) => (\n  <>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          placeholder=\"Search Movies or TV shows...\"\n          value={searchTerm}\n          onChange={updateTerm}\n        />\n      </Form>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {movieResults && movieResults.length > 0 && (\n            <Section title=\"Movie Results\">\n              {movieResults.map(movie => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  title={movie.original_title}\n                  imageUrl={movie.poster_path}\n                  isMovie={true}\n                  rating={movie.vote_average}\n                  year={\n                    movie.release_date && movie.release_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {tvResults && tvResults.length > 0 && (\n            <Section title=\"TV Show Results\">\n              {tvResults.map(show => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  title={show.original_name}\n                  imageUrl={show.poster_path}\n                  rating={show.vote_average}\n                  year={\n                    show.first_air_date && show.first_air_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color=\"red\" text={error} />}\n          {tvResults &&\n            movieResults &&\n            tvResults.length === 0 &&\n            movieResults.length === 0 && (\n              <Message text=\"Nothing found\" color=\"grey\" />\n            )}\n        </>\n      )}\n    </Container>\n  </>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n    console.log(value);\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({\n      loading: true\n    });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({\n        error: \"can't find results\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  };\n  render() {\n    const {\n      movieResults,\n      tvResults,\n      searchTerm,\n      loading,\n      error,\n      updateTerm\n    } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/message\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n  font-size: 12px;\n  width: 50%;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <Message />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : \"none\"\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>|</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>|</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name}/ `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\n\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n    const { isMovie } = this.state;\n    const parseId = parseInt(id);\n    if (isNaN(parseId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parseId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parseId));\n      }\n    } catch {\n      this.setState({ error: \"Cant find anything\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    console.log(result);\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" exact component={TV} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/show/:id\" component={Detail} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n${reset};\na{\n    text-decoration:none;\n    color:inherit\n\n}\n*{\n    box-sizing:border-box;\n}\n\nbody{\n    font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 14px;\n    color: white;\n    padding-top: 50px;\n    background-color:rgba(20,20,20,1)\n}\n`;\n\nexport default globalStyles;\n","import React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}